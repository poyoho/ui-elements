var E=(n,t,e)=>{if(!t.has(n))throw TypeError("Cannot "+e)};var u=(n,t,e)=>(E(n,t,"read from private field"),e?e.call(n):t.get(n)),f=(n,t,e)=>{if(t.has(n))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(n):t.set(n,e)},S=(n,t,e,s)=>(E(n,t,"write to private field"),s?s.call(n,e):t.set(n,e),e);import{g as D}from"./index.5a742324.js";var A=`
<div class="drag-wrap">
  <slot name="item">
</div>
<style>
  .drag-wrap {
    background: #000;
    display: flex;
    justify-content: space-between;
    gap: 10px;
    width: 100%;
    height: 100%;
  }
</style>
`;function H(n,t,e){const s={start:0,end:0};let d=0;for(let r=0;r<t.length;r++){const p=t[r],h=e(p);if(d+=h,d>=n){s.end=r;break}else h!==0&&(s.start=r)}return s.start-s.end>=0?s.end=s.start+1:s.end-s.start>1&&(s.start=s.end-1),{start:t[s.start],end:t[s.end]}}function x(n,t){n.forEach(e=>{e.style.pointerEvents=t?"auto":"none"})}function z(n){const t=n.currentTarget,e=D(t),{items:s,wrap:d,direction:r}=e,p=o=>r==="row"?o.offsetX:o.offsetY,h=o=>r==="row"?o.clientX:o.clientY,m=o=>r==="row"?o.clientWidth:o.clientHeight,g=(o,c)=>r==="row"?o.style.width=c:o.style.height=c,L=o=>{const c=m(d),i=H(p(o),s,m),y=m(i.start)+m(i.end),C=m(i.start),k=y*100/c;return{startPostion:h(o),postion:i,maxSize:y,startSize:C,maxPercent:k,wrapSize:c}};x(s,!1);let a=L(n);const v=o=>{const c=a.startSize+(h(o)-a.startPostion);if(c>a.maxSize||c<0)return;let i=c*100/a.wrapSize;i<2?i=0:i>a.maxPercent-2&&(i=a.maxPercent),g(a.postion.start,i+"%"),g(a.postion.end,a.maxPercent-i+"%")};document.addEventListener("mousemove",v),document.addEventListener("mouseup",()=>{x(s,!0),document.removeEventListener("mousemove",v)})}function P(n){n.stopPropagation()}function I(n){return["row","column"].includes(n)?n:"row"}let M=0;var l,w;class b extends HTMLElement{constructor(){super();f(this,l,"row");f(this,w,++M);const t=this.attachShadow({mode:"open"}),e=this.ownerDocument.createElement("div");e.style.width="inherit",e.style.height="inherit",e.innerHTML=A,t.appendChild(e),this.setAttribute("data-index",`${u(this,w)}`)}get direction(){return u(this,l)}get items(){return Array.from(this.querySelectorAll(`[data-index='${u(this,w)}']>[slot='item']`)).filter(e=>!e.hasAttribute("hidden"))}get wrap(){return this.shadowRoot.querySelector(".drag-wrap")}connectedCallback(){this.attributeChangedCallback(),this.updateItems()}disconnectedCallback(){const{wrap:t,items:e}=this;e.forEach(s=>s.removeEventListener("mousedown",P)),t.removeEventListener("mousedown",z)}attributeChangedCallback(){const{wrap:t}=this,e=this.attributes.getNamedItem("direction");S(this,l,e?I(e.value):"row"),t.style.cursor=u(this,l)==="row"?"col-resize":"row-resize",t.style.flexDirection=u(this,l)}updateItems(){const{items:t,wrap:e,direction:s}=this,d=100/t.length+"%";console.log("[drag-wrap] update item"),t.forEach(r=>{r.style.cursor="auto",s==="row"?r.style.width=d:r.style.height=d,r.addEventListener("mousedown",P)}),t.length>0&&e.addEventListener("mousedown",z)}}l=new WeakMap,w=new WeakMap;function q(){window.customElements.get("drag-wrap")||(window.DragWrap=b,window.customElements.define("drag-wrap",b))}export{q as i};
